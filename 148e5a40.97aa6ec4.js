(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),o=(n(0),n(166)),i={id:"vue",title:"\ud83d\udc9a Vue"},s={id:"integrations/vue",isDocsHomePage:!1,title:"\ud83d\udc9a Vue",description:"Grid.js has a native Vue wrapper which can be used to create a Grid.js instance within a Vue app. Use the gridjs-vue package to integrate your Vue app with Grid.js.",source:"@site/docs/integrations/vue.md",permalink:"/docs/integrations/vue",editUrl:"https://github.com/grid-js/website/edit/master/docs/integrations/vue.md",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1592511152,sidebar:"sidebar",previous:{title:"\u269b\ufe0f React",permalink:"/docs/integrations/react"},next:{title:"Hello, World!",permalink:"/docs/examples/hello-world"}},c=[{value:"Install",id:"install",children:[]},{value:"Component Registration",id:"component-registration",children:[{value:"Global Registration",id:"global-registration",children:[]},{value:"Local Registration",id:"local-registration",children:[]}]},{value:"Usage",id:"usage",children:[{value:"Example",id:"example",children:[]},{value:"Default options",id:"default-options",children:[]}]}],l={rightToc:c};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("center",null,Object(o.b)("img",{src:"https://user-images.githubusercontent.com/2541728/84843482-ffc31c00-b015-11ea-95e8-dc6fb3931ad5.png",alt:"gridjs-vue logo"})),Object(o.b)("p",null,"Grid.js has a native Vue wrapper which can be used to create a Grid.js instance within a Vue app. Use the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/grid-js/gridjs-vue"}),"gridjs-vue")," package to integrate your Vue app with Grid.js."),Object(o.b)("h2",{id:"install"},"Install"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm install gridjs-vue\n")),Object(o.b)("h2",{id:"component-registration"},"Component Registration"),Object(o.b)("h3",{id:"global-registration"},"Global Registration"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"/* in `main.js` or wherever you specify your global components */\nimport Grid from 'gridjs-vue'\n\nVue.use(Grid)\n")),Object(o.b)("h3",{id:"local-registration"},"Local Registration"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<script>\nimport Grid from 'gridjs-vue'\n\nexport default {\n  components: {\n    Grid\n  }\n}\n<\/script>\n")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Pass ",Object(o.b)("inlineCode",{parentName:"p"},"cols")," (an array of column headers) and either ",Object(o.b)("inlineCode",{parentName:"p"},"rows"),", ",Object(o.b)("inlineCode",{parentName:"p"},"from"),", or ",Object(o.b)("inlineCode",{parentName:"p"},"server")," as a data source to the component. Everything else is optional."),Object(o.b)("p",null,"Refer to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/config"}),"Grid.js documentation")," for specific configuration options."),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vue"}),"<template>\n  <grid\n    :auto-width=\"autoWidth\"\n    :cols=\"cols\"\n    :from=\"from\"\n    :language=\"language\"\n    :pagination=\"pagination\"\n    :rows=\"rows\"\n    :search=\"search\"\n    :server=\"server\"\n    :sort=\"sort\"\n    :width=\"width\"\n  ></grid>\n</template>\n\n<script>\nimport Grid from 'gridjs-vue'\n\nexport default {\n  name: 'MyTable',\n  components: {\n    Grid\n  },\n  data() {\n    return {\n      // REQUIRED:\n      cols: ['col 1', 'col 2'], // array containing strings of column headers\n      // AND EITHER an array containing row data\n      rows: [\n        ['row 1 col 1', 'row 1 col 2'],\n        ['row 2 col 1', 'row 2 col 2']\n      ],\n      // OR a string of an HTML table selector to import\n      from: '.my-element'\n      // OR a server settings object\n      server() ({\n        url: 'https://api.com/search?q=my%20query',\n        then: res => res.data.map(col => [col1.data, col2.data, col3.data, col4.data]),\n        handle: res => res.status === 404 ? { data: [] } : res.ok ? res.json() : new Error('Something went wrong')\n      }),\n\n      // OPTIONAL:\n      autoWidth: true / false, // boolean to automatically set table width\n      language: {}, // localization dictionary object\n      pagination: true / false || {}, // boolean or pagination settings object\n      search: true / false || {}, // boolean or search settings object\n      sort: true / false || {}, // boolean or sort settings object\n      theme: 'mermaid', // string with name of theme or 'none' to disable\n      width: '100%', // string with css width value\n    }\n  }\n}\n<\/script>\n")),Object(o.b)("h3",{id:"default-options"},"Default options"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "autoWidth": true,\n  "cols": [""],\n  "from": undefined,\n  "language": undefined,\n  "pagination": false,\n  "rows": undefined,\n  "search": false,\n  "server": undefined,\n  "sort": false,\n  "theme": "mermaid",\n  "width": "100%"\n}\n')))}d.isMDXComponent=!0}}]);