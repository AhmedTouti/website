(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{168:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return m})),t.d(n,"default",(function(){return f}));var r=t(2),a=t(6),l=t(0),i=t(177),c=t(179),d=t(178),s=t(186),o={id:"html-header-cells",title:"HTML in header cells",keywords:["javascript","table","javascript table","gridjs","grid js","html cell","html header"]},p={id:"examples/html-header-cells",isDocsHomePage:!1,title:"HTML in header cells",description:"Import the html function first:",source:"@site/docs/examples/html-header-cells.md",permalink:"/docs/examples/html-header-cells",editUrl:"https://github.com/grid-js/website/edit/master/docs/examples/html-header-cells.md",sidebar:"sidebar",previous:{title:"HTML in cells",permalink:"/docs/examples/html-cells"},next:{title:"Virtual DOM",permalink:"/docs/examples/virtual-dom"}},m=[],u={rightToc:m};function f(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Import the ",Object(i.b)("inlineCode",{parentName:"p"},"html")," function first:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'import { Grid, html } from "gridjs";\n')),Object(i.b)("p",null,"Then you can use that in ",Object(i.b)("inlineCode",{parentName:"p"},"columns")," or ",Object(i.b)("inlineCode",{parentName:"p"},"name")," field of ",Object(i.b)("inlineCode",{parentName:"p"},"columns"),":"),Object(i.b)(d.a,{children:"\nconst grid = new Grid({\n  columns: [\n      { \n        name: html('<i>Name</i>'),\n      },\n      html('<div style=\"border: 1px solid #ccc;padding: 5px;border-radius: 5px;text-align: center;\">Email</div>'),\n   ],\n  data: Array(5).fill().map(x => [\n    faker.name.findName(),\n    faker.internet.email(),\n  ])\n});\n",transformCode:function(e){return"\nfunction () {\n  "+e+"\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    grid.render(wrapperRef.current);\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n"},live:!0,scope:{Grid:c.b,CodeBlock:d.a,useEffect:l.useEffect,useRef:l.useRef,faker:s,html:c.e},mdxType:"CodeBlock"}),Object(i.b)("br",null),Object(i.b)("p",null,"You can also create a virtual DOM and attach it to header cells:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'import { Grid, h } from "gridjs";\n')),Object(i.b)(d.a,{children:"\nconst grid = new Grid({\n  columns: [\n    h('b', {}, 'Name'),\n    h('div', {\n      style: {\n        border: '1px solid #ccc',\n        padding: '5px',\n        'border-radius': '5px',\n        'text-align': 'center',\n      }\n    }, 'Email'),\n  ],\n  data: Array(5).fill().map(x => [\n    faker.name.findName(),\n    faker.internet.email(),\n  ]),\n  search: true\n});\n",transformCode:function(e){return"\nfunction () {\n  "+e+"\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    grid.render(wrapperRef.current);\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n"},live:!0,scope:{Grid:c.b,CodeBlock:d.a,useEffect:l.useEffect,useRef:l.useRef,faker:s,h:c.d},mdxType:"CodeBlock"}))}f.isMDXComponent=!0}}]);