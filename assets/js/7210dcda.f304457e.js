(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{118:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return l})),t.d(a,"metadata",(function(){return s})),t.d(a,"toc",(function(){return o})),t.d(a,"default",(function(){return c}));var n=t(3),i=t(8),r=(t(0),t(174)),l={title:"Laravel"},s={unversionedId:"integrations/laravel",id:"integrations/laravel",isDocsHomePage:!1,title:"Laravel",description:"This package is a Laravel integration for the Grid.js. The packages makes it easy to create data-grid for your Laravel application, for example admin panel lists. It covers the basic server side functionalities for Grid.js like search, sorting and pagination.",source:"@site/docs/integrations/laravel.md",sourceDirName:"integrations",slug:"/integrations/laravel",permalink:"/docs/integrations/laravel",editUrl:"https://github.com/grid-js/website/edit/master/docs/integrations/laravel.md",version:"current",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1617010690,formattedLastUpdatedAt:"3/29/2021",frontMatter:{title:"Laravel"},sidebar:"sidebar",previous:{title:"Angular",permalink:"/docs/integrations/angular"},next:{title:"Svelte",permalink:"/docs/integrations/svelte"}},o=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Credits",id:"credits",children:[]},{value:"License",id:"license",children:[]}],d={toc:o};function c(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},d,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This package is a Laravel integration for the Grid.js. The packages makes it easy to create data-grid for your Laravel application, for example admin panel lists. It covers the basic server side functionalities for Grid.js like search, sorting and pagination."),Object(r.b)("p",null,"GitHub: ",Object(r.b)("a",{parentName:"p",href:"https://github.com/wdev-rs/laravel-datagrid"},"https://github.com/wdev-rs/laravel-datagrid")),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("p",null,"You can install the package via composer:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"composer require wdev-rs/laravel-datagrid\n")),Object(r.b)("p",null,"Install the Vue.js integration:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"npm install gridjs-vue\n")),Object(r.b)("p",null,"Publish the vendor files by running"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'php artisan vendor:publish --provider="WdevRs\\LaravelDatagrid\\LaravelDatagridServiceProvider"\n')),Object(r.b)("p",null,"Register the DataGrid fronted Vue.js component by adding the following line to your ",Object(r.b)("inlineCode",{parentName:"p"},"app.js"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"require('./vendor/laravel-datagrid/laravel-datagrid');\n")),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("p",null,"The base of this package is the ",Object(r.b)("inlineCode",{parentName:"p"},"\\WdevRs\\LaravelDatagrid\\DataGrid\\DataGrid")," class. This class is used to define the\ncolumns and the behavior of the datagrid. While you can use this class directly from the controller, I'll\nsuggest extending it and create separate classes for each datagrid."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"class CategoriesDataGrid extends DataGrid\n{\n\n    /**\n     * CategoriesDataGrid constructor.\n     */\n    public function __construct()\n    {\n        $this->query(Category::query())\n            ->column('id', 'ID', null, 50)\n            ->column('name', 'Name', function ($category) {\n                return view('admin.categories.actions.edit_link', ['category' => $category])->render();\n            })\n    }\n}\n")),Object(r.b)("p",null,"Using the ",Object(r.b)("inlineCode",{parentName:"p"},"query")," method you can define what should be the base query for the DataGrid. It accepts a Laravel Query Builder object.\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"column")," method is used to define the columns of the DataGrid, the argument are as follows:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"id")," - the name of the field in the database"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"name")," - the label which should appear in the DataGrid column header"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"formatter")," - optional, callable allows you to format the display of the column. As you can see from the above example\nprobably the most elegant way to do this is to include a blade view and render it."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"width")," - optional, the with of the column")),Object(r.b)("p",null,"When the DataGrid definition is ready, you can add it to the controller:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"    public function index(CategoriesDataGrid $dataGrid, Request $request)\n    {\n        return $dataGrid->render();\n    }\n")),Object(r.b)("p",null,"If the ",Object(r.b)("inlineCode",{parentName:"p"},"render")," method is called without arguments it will use the default view ",Object(r.b)("inlineCode",{parentName:"p"},"resources/views/vendor/laravel-datagrid/datagrid.blade.php"),",\nor you can pass your own view and include the DataGrid blade file there:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"    public function index(CategoriesDataGrid $dataGrid, Request $request)\n    {\n        return $dataGrid->render('admin.common.index');\n    }\n")),Object(r.b)("h2",{id:"credits"},"Credits"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/wdev-rs"},"Daniel Werner"))),Object(r.b)("h2",{id:"license"},"License"),Object(r.b)("p",null,"The MIT License (MIT)"))}c.isMDXComponent=!0}}]);