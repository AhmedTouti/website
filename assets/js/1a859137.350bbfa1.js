(self.webpackChunkgridjs_website=self.webpackChunkgridjs_website||[]).push([[2010],{8008:function(e,r,n){"use strict";n.d(r,{$:function(){return u}});var t=n(93552),o=n(41904),a={search:{placeholder:"\ud83d\udd0d Busqueda..."},sort:{sortAsc:"Ordenar la columna en orden ascendente",sortDesc:"Ordenar la columna en orden descendente"},pagination:{previous:"Anterior",next:"Siguiente",navigate:function(e,r){return"P\xe1gina "+e+" de "+r},page:function(e){return"P\xe1gina "+e},showing:"Mostrando los resultados",of:"sobre",to:"a",results:""},loading:"Cargando...",noRecordsFound:"Nig\xfan resultado encontrado",error:"Se produjo un error al recuperar datos"},s={search:{placeholder:"\ud83d\udd0d Recherche..."},sort:{sortAsc:"Trier la colonne dans l'ordre croissant",sortDesc:"Trier la colonne dans l'ordre d\xe9croissant"},pagination:{previous:"Pr\xe9c\xe9dent",next:"Suivant",navigate:function(e,r){return"Page "+e+" de "+r},page:function(e){return"Page "+e},showing:"Affichage des r\xe9sultats",of:"sur",to:"\xe0",results:""},loading:"Chargement...",noRecordsFound:"Aucun r\xe9sultat trouv\xe9",error:"Une erreur est survenue lors de la r\xe9cup\xe9ration des donn\xe9es"},i=n(16589),l=n(67294),d=n(85384),u=function(e){function r(){return e.apply(this,arguments)||this}return(0,t.Z)(r,e),r.prototype.render=function(){return l.createElement(i.Z,{children:this.props.children,transformCode:function(e){return"\nfunction () {\n  "+e+"\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    if (typeof (grid) == 'object' && wrapperRef && wrapperRef.current && wrapperRef.current.childNodes.length === 0) {\n      grid.render(wrapperRef.current);\n    }\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n"},live:!0,scope:Object.assign({Grid:o.rj,html:o.dy,h:o.h,gCreateRef:o.Vf,gComponent:o.wA,PluginPosition:o.t8,BaseComponent:o.H6,CodeBlock:i.Z,useEffect:l.useEffect,useRef:l.useRef,faker:d,esES:a,frFR:s},this.props.scope)})},r}(l.Component)},98609:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var t=n(22122),o=n(19756),a=(n(67294),n(3905)),s=n(8008),i=["components"],l={id:"import-xml",title:"XML",keywords:["javascript","table","javascript table","gridjs","grid js","import","import data","import xml","xml"]},d={unversionedId:"examples/import-xml",id:"examples/import-xml",isDocsHomePage:!1,title:"XML",description:"Using the handler callback you can parse and handle HTTP calls yourself. The default handler tries to cast the response",source:"@site/docs/examples/import-xml.md",sourceDirName:"examples",slug:"/examples/import-xml",permalink:"/docs/examples/import-xml",editUrl:"https://github.com/grid-js/website/edit/master/docs/examples/import-xml.md",version:"current",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1593637169,formattedLastUpdatedAt:"7/1/2020",frontMatter:{id:"import-xml",title:"XML",keywords:["javascript","table","javascript table","gridjs","grid js","import","import data","import xml","xml"]},sidebar:"sidebar",previous:{title:"JSON",permalink:"/docs/examples/import-json"},next:{title:"From HTML Table",permalink:"/docs/examples/from"}},u=[],c={toc:u};function p(e){var r=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"handler")," callback you can parse and handle HTTP calls yourself. The default handler tries to cast the response\nto a JSON format, but you can override it to parse the data in a different format."),(0,a.kt)("p",null,"In this example, we are parsing ",(0,a.kt)("inlineCode",{parentName:"p"},"https://gridjs.io/sitemap.xml")," which is a XML formatted document:"),(0,a.kt)(s.$,{children:"\nconst grid = new Grid({\n  sort: true,\n  search: true,\n  pagination: true,\n  columns: ['Location', 'Change Frequency', 'Priority'],\n  server: {\n    url: 'https://gridjs.io/sitemap.xml',\n    handle: (res) => {\n      return res.text().then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"));\n    },\n    then: data => {\n      return Array.from(data.querySelectorAll('url'))\n        .map(row => [\n          row.querySelector('loc').innerHTML,\n          row.querySelector('changefreq').innerHTML,\n          row.querySelector('priority').innerHTML,\n        ]);\n    }\n  }\n});\n",mdxType:"LiveExample"}),(0,a.kt)("br",null))}p.isMDXComponent=!0}}]);