(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{174:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return m})),n.d(t,"default",(function(){return f}));var a=n(2),r=n(6),i=n(0),c=n(176),o=n(178),s=function(e,t){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},p=function(e){function t(t){var n=e.call(this,t)||this;return n.wrapper=Object(i.createRef)(),n.instance=null,n.instance=new o.b(t||{}),n}return function(e,t){function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),t.prototype.getInstance=function(){return this.instance},t.prototype.componentDidMount=function(){this.instance.render(this.wrapper.current)},t.prototype.componentDidUpdate=function(){this.instance.updateConfig(this.props).forceRender()},t.prototype.render=function(){return Object(i.createElement)("div",{ref:this.wrapper})},t}(i.Component),d=n(177),l=n(190),u={id:"react",title:"\u269b\ufe0f React"},b={id:"integrations/react",isDocsHomePage:!1,title:"\u269b\ufe0f React",description:"Grid.js has native React wrapper which can be used to create Grid.js instance in a React app. Use gridjs-react",source:"@site/docs/integrations/react.md",permalink:"/docs/integrations/react",editUrl:"https://github.com/grid-js/website/edit/master/docs/integrations/react.md",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1592149038,sidebar:"sidebar",previous:{title:"pagination",permalink:"/docs/config/pagination"},next:{title:"\ud83d\udc9a Vue",permalink:"/docs/integrations/vue"}},m=[{value:"Install",id:"install",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Example",id:"example",children:[]}],j={rightToc:m};function f(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},j,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Grid.js has native React wrapper which can be used to create Grid.js instance in a React app. Use ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/grid-js/gridjs-react"}),"gridjs-react"),"\npackage to integrate your React app with Grid.js."),Object(c.b)("h2",{id:"install"},"Install"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install --save gridjs-react\n")),Object(c.b)("p",null,"Also, make sure you have Grid.js installed already as it's a peer dependency of ",Object(c.b)("inlineCode",{parentName:"p"},"gridjs-react"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install --save gridjs\n")),Object(c.b)("h2",{id:"usage"},"Usage"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { Grid } from 'gridjs-react';\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"<Grid\n  data={[\n    ['John', 'john@example.com'],\n    ['Mike', 'mike@gmail.com']\n  ]}\n  columns={['Name', 'Email']}\n  search={true}\n  pagination={{\n    enabled: true,\n    limit: 1,\n  }}\n/>\n")),Object(c.b)("p",null,"Then you can pass all Grid.js configs to the ",Object(c.b)("inlineCode",{parentName:"p"},"Grid")," component. See ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/config"}),"Grid.js Config")," for more details."),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)(d.a,{children:"\nfunction MyComponent(props) {\n  const row = () => [faker.name.findName(), faker.internet.email()];\n  const [data, setData] = useState([row()]);\n  const update = () => {\n    setData(data.slice(0).concat([row()]));\n  }\n  \n  return (\n    <div>\n      <button onClick={update.bind(this)} className={\"py-2 mb-4 px-4 border rounded-md text-white bg-blue-600\"}>\n        Add record\n      </button>\n      \n      <Grid\n        data={data}\n        columns={['Name', 'Email']}\n        pagination={{\n          limit: 5,\n        }}\n      />\n    </div>\n  );\n}\n",live:!0,scope:{Grid:p,CodeBlock:d.a,useEffect:i.useEffect,useState:i.useState,faker:l},mdxType:"CodeBlock"}))}f.isMDXComponent=!0}}]);