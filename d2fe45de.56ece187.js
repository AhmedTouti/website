(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{136:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return r})),i.d(n,"metadata",(function(){return d})),i.d(n,"rightToc",(function(){return l})),i.d(n,"default",(function(){return p}));var t=i(2),a=i(6),o=(i(0),i(158)),r={id:"basics",title:"Plugin basics"},d={unversionedId:"plugin/basics",id:"plugin/basics",isDocsHomePage:!1,title:"Plugin basics",description:"Grid.js is a modular JavaScript framework which allows you to add custom plugins to it or remove the existing ones.",source:"@site/docs/plugin/basics.md",slug:"/plugin/basics",permalink:"/docs/plugin/basics",editUrl:"https://github.com/grid-js/website/edit/master/docs/plugin/basics.md",version:"current",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1595075123,sidebar:"sidebar",previous:{title:"pagination",permalink:"/docs/config/pagination"},next:{title:"Writing a Plugin",permalink:"/docs/plugin/writing-plugin"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Plugin Position",id:"plugin-position",children:[]},{value:"Adding a Plugin",id:"adding-a-plugin",children:[]},{value:"Ordering of plugins",id:"ordering-of-plugins",children:[]}],s={rightToc:l};function p(e){var n=e.components,i=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},s,i,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Grid.js is a modular JavaScript framework which allows you to add custom plugins to it or remove the existing ones.\nIn this article, we talk about what is a Grid.js plugin and how to develop one."),Object(o.b)("h2",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"Grid.js uses ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://preactjs.com/"}),"Preact")," under the hood to render the table and other components like search, pagination, etc.\nA Grid.js plugin is a ",Object(o.b)("inlineCode",{parentName:"p"},"class")," or a ",Object(o.b)("inlineCode",{parentName:"p"},"function")," that render a Virtual Node. This interface is very similar to a React component. "),Object(o.b)("p",null,"Once you have a component that can render an element, then you can add it to the list of Grid.js plugin and Grid.js will\ntake care of rendering and calling your plugin."),Object(o.b)("p",null,"A ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/grid-js/gridjs/blob/master/src/plugin.ts"}),"Plugin")," has following properties:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-ts"}),"interface Plugin {\n  id: string;\n  position: PluginPosition;\n  component: VNode<any>;\n  order?: number;\n}\n")),Object(o.b)("p",null,"Where ",Object(o.b)("inlineCode",{parentName:"p"},"id")," is a unique string, ",Object(o.b)("inlineCode",{parentName:"p"},"position")," defines where that plugin should be rendered and there is an optional ",Object(o.b)("inlineCode",{parentName:"p"},"order"),"\nproperty to change the ordering of plugins in a specific plugin position (e.g. header)."),Object(o.b)("h2",{id:"plugin-position"},"Plugin Position"),Object(o.b)("p",null,"Grid.js can render a plugin in different positions. Simply import ",Object(o.b)("inlineCode",{parentName:"p"},"PluginPosition")," enum from ",Object(o.b)("inlineCode",{parentName:"p"},"gridjs")," package and use it\nwhen you are calling the ",Object(o.b)("inlineCode",{parentName:"p"},"plugin.add(...)")," function:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'import { PluginPosition } from "gridjs";\n')),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(o.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"If you need to render your plugin in a position that doesn't already exist, please open a GitHub issue and we will add\na new PluginPosition!"))),Object(o.b)("h2",{id:"adding-a-plugin"},"Adding a Plugin"),Object(o.b)("p",null,"Adding a plugin to a Grid.js instance is as easy as calling ",Object(o.b)("inlineCode",{parentName:"p"},"gridjs_instance.plugin.add(...)"),", for instance:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"grid.plugin.add({\n  id: 'myplugin',\n  component: MyPlugin,\n  position: PluginPosition.Header,\n});\n")),Object(o.b)("p",null,"Note that ",Object(o.b)("inlineCode",{parentName:"p"},"position")," and ",Object(o.b)("inlineCode",{parentName:"p"},"id")," are mandatory fields and ",Object(o.b)("inlineCode",{parentName:"p"},"component")," is the actual plugin class or function that we want to render.\nYou can render the same plugin multiple times by calling the ",Object(o.b)("inlineCode",{parentName:"p"},"plugin.add()")," function and passing an unqiue ID."),Object(o.b)("h2",{id:"ordering-of-plugins"},"Ordering of plugins"),Object(o.b)("p",null,"You can pass an optional ",Object(o.b)("inlineCode",{parentName:"p"},"order")," property to ",Object(o.b)("inlineCode",{parentName:"p"},"plugin.add()")," to define the ordering of your components:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"grid.plugin.add({\n  id: 'myfirstplugin',\n  component: MyPlugin,\n  position: PluginPosition.Header,\n  order: 1,\n});\n\ngrid.plugin.add({\n  id: 'mysecondplugin',\n  component: MyPlugin,\n  position: PluginPosition.Header,\n  order: 2,\n});\n")),Object(o.b)("p",null,"In above example, ",Object(o.b)("inlineCode",{parentName:"p"},"myfirstplugin")," renders first and then ",Object(o.b)("inlineCode",{parentName:"p"},"mysecondplugin")," will be rendered."),Object(o.b)("p",null,"Now, let's take a look at writing a simple plugin."))}p.isMDXComponent=!0}}]);