(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{108:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return d})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return m})),t.d(n,"default",(function(){return u}));var a=t(2),r=t(6),i=t(0),o=t(150),s=t(153),c=t(152),d={id:"import-async",title:"Async data import"},p={id:"examples/import-async",title:"Async data import",description:"The data attribute accepts an async function, too. This is useful for making any external HTTP calls and loading",source:"@site/docs/examples/import-async.md",permalink:"/docs/examples/import-async",editUrl:"https://github.com/grid-js/website/edit/master/docs/examples/import-async.md",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1590841260,sidebar:"sidebar",previous:{title:"Dynamic data import",permalink:"/docs/examples/import-function"},next:{title:"Import server-side data",permalink:"/docs/examples/server"}},m=[],l={rightToc:m};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"data")," attribute accepts an ",Object(o.b)("inlineCode",{parentName:"p"},"async")," function, too. This is useful for making any external HTTP calls and loading\ndata from a server. "),Object(o.b)("p",null,"Here we have passed a function to the ",Object(o.b)("inlineCode",{parentName:"p"},"data")," attribute which returns a ",Object(o.b)("inlineCode",{parentName:"p"},"Promise")," object and resolves\nthe data after 1 second:"),Object(o.b)(c.a,{children:"\nconst grid = new Grid({\n  columns: ['Name', 'Email', 'Phone Number'],\n  data: () => {\n    return new Promise(resolve => {\n      setTimeout(() =>\n        resolve([\n          ['John', 'john@example.com', '(353) 01 222 3333'],\n          ['Mark', 'mark@gmail.com', '(01) 22 888 4444']\n        ]), 1000);\n    });\n  }\n});\n",transformCode:function(e){return"\nfunction () {\n  "+e+"\n  \n  useEffect(() => {\n    grid.render(document.getElementById('wrapper'));\n  });\n  \n  return (\n    <div id=\"wrapper\" />\n  );\n}\n"},live:!0,scope:{Grid:s.a,CodeBlock:c.a,useEffect:i.useEffect},mdxType:"CodeBlock"}))}u.isMDXComponent=!0}}]);