(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{119:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return f})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return h}));var r=n(2),a=n(6),s=n(0),i=n(175),o=n(177),c=n(176),l=n(1330),d=n.n(l),f=(n(120),{id:"stock-market",title:"Stock Market",keywords:["javascript","table","javascript table","gridjs","grid js","formatting","stock market"]}),p={id:"examples/stock-market",isDocsHomePage:!1,title:"Stock Market",description:"Grid.js can render complex elements in the table cells. In this example, we will take advantage of the builtin Virtual DOM",source:"@site/docs/examples/stock-market.md",permalink:"/docs/examples/stock-market",editUrl:"https://github.com/grid-js/website/edit/master/docs/examples/stock-market.md",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1593039657,sidebar:"sidebar",previous:{title:"Internationalization",permalink:"/docs/examples/i18n"}},u=[],m={rightToc:u};function h(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Grid.js can render complex elements in the table cells. In this example, we will take advantage of the builtin Virtual DOM\nand Chartist library to render line charts in cells."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { Grid, h, createRef as gCreateRef } from \"gridjs\";\nimport Chartist from 'chartist';\n")),Object(i.b)(c.a,{children:"\n// Chartist options\nconst opts = {\n  height: '30px',\n  showPoint: false,\n  fullWidth:true,\n  chartPadding: {top: 0,right: 0,bottom: 0,left: 0},\n  axisX: {showGrid: false, showLabel: false, offset: 0},\n  axisY: {showGrid: false, showLabel: false, offset: 0}\n};\nconst grid = new Grid({\n  sort: true,\n  columns: [\n    'Symbol',\n    'Last price',\n    { \n      name: 'Difference', \n      formatter: (cell) => {\n        return h('b', { style: {\n          'color': cell > 0 ? 'green' : 'red'\n        }}, cell);\n      }\n    },\n    {\n      name: 'Trend',\n      sort: false,\n      width: '100px',\n      formatter: (cell) => {\n        const ref = gCreateRef();\n        const chart = h('div', { ref: ref })\n        \n        // setTimeout to ensure that the chart wrapper is mounted\n        setTimeout(() => {\n          // render the chart based on cell data\n          ref.current && new Chartist.Line(ref.current, {\n            series: [cell]\n          }, opts);\n        }, 0);\n        \n        return chart;\n      }\n    }],\n  data: [\n    ['AAPL', 360.2, 20.19, [360, 363, 366, 361, 366, 350, 370]],\n    ['ETSY', 102.1, 8.22, [90, 91, 92, 90, 94, 95, 99, 102]],\n    ['AMZN', 2734.8, -30.01, [2779, 2786, 2792, 2780, 2750, 2765, 2740, 2734]],\n    ['TSLA', 960.85, -40.91, [993, 990, 985, 983, 970, 985, 988, 960]],\n  ]\n});\n",transformCode:function(e){return"\nfunction () {\n  "+e+"\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    grid.render(wrapperRef.current);\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n"},live:!0,scope:{Grid:o.b,h:o.d,gCreateRef:o.c,CodeBlock:c.a,useEffect:s.useEffect,useRef:s.useRef,useState:s.useState,Chartist:d.a},mdxType:"CodeBlock"}))}h.isMDXComponent=!0}}]);