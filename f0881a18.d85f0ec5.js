(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{148:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return d})),t.d(n,"metadata",(function(){return m})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return u}));var a=t(2),r=t(6),o=t(0),c=t(153),i=t(156),l=t(154),s=t(184),d={id:"cell-formatting",title:"Cell formatting"},m={id:"examples/cell-formatting",title:"Cell formatting",description:"You can customize cells and format them at runtime using formatter property:",source:"@site/docs/examples/cell-formatting.md",permalink:"/docs/examples/cell-formatting",editUrl:"https://github.com/grid-js/website/edit/master/docs/examples/cell-formatting.md",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1591532649,sidebar:"sidebar",previous:{title:"forceRender",permalink:"/docs/examples/force-render"},next:{title:"Populating cells with HTML",permalink:"/docs/examples/html-cells"}},p=[],f={rightToc:p};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},f,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"You can customize cells and format them at runtime using ",Object(c.b)("inlineCode",{parentName:"p"},"formatter")," property:"),Object(c.b)(l.a,{children:"\nconst grid = new Grid({\n  columns: [\n      { \n        name: 'Name',\n        formatter: (cell) => `Name: ${cell}`\n      },\n      'Email',\n   ],\n  data: Array(5).fill().map(x => [\n    faker.name.findName(),\n    faker.internet.email(),\n  ])\n});\n",transformCode:function(e){return"\nfunction () {\n  "+e+"\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    grid.render(wrapperRef.current);\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n"},live:!0,scope:{Grid:i.a,CodeBlock:l.a,useEffect:o.useEffect,useRef:o.useRef,faker:s},mdxType:"CodeBlock"}),Object(c.b)("div",{className:"admonition admonition-info alert alert--info"},Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"It is also possible to add HTML content to cells. See ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/examples/html-cells"}),"Populating cells with HTML"),"."))),Object(c.b)("p",null,"You can also get access to other cells in the same row:"),Object(c.b)(l.a,{children:"\nconst grid = new Grid({\n  columns: [\n      'Salary 1',\n      'Salary 2',\n      { \n        name: 'Sum',\n        formatter: (_, row) => `$${(row.cells[0].data + row.cells[1].data).toLocaleString()} USD`\n      },\n   ],\n  data: Array(5).fill().map(x => [\n    Math.round(Math.random() * 100000),\n    Math.round(Math.random() * 100000),\n    null\n  ])\n});\n",transformCode:function(e){return"\nfunction () {\n  "+e+"\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    grid.render(wrapperRef.current);\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n"},live:!0,scope:{Grid:i.a,CodeBlock:l.a,useEffect:o.useEffect,useRef:o.useRef,faker:s},mdxType:"CodeBlock"}))}u.isMDXComponent=!0}}]);