(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{159:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var r=t(161),a=t(160),i=t(0),o=t.n(i),s=t(162);class p extends i.Component{render(){return o.a.createElement(a.a,{children:this.props.children,transformCode:e=>`\nfunction () {\n  ${e}\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    if (wrapperRef && wrapperRef.current && wrapperRef.current.childNodes.length === 0) {\n      grid.render(wrapperRef.current);\n    }\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n`,live:!0,scope:{Grid:r.f,html:r.l,h:r.k,gCreateRef:r.j,gComponent:r.e,PluginPosition:r.h,BaseComponent:r.b,BaseProps:r.BaseProps,CodeBlock:a.a,useEffect:i.useEffect,useRef:i.useRef,faker:s,...this.props.scope}})}}},95:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return m}));var r=t(2),a=t(6),i=(t(0),t(158)),o=t(159),s={id:"import-function",title:"Dynamic data import",keywords:["javascript","table","javascript table","gridjs","grid js","import","import data"]},p={unversionedId:"examples/import-function",id:"examples/import-function",isDocsHomePage:!1,title:"Dynamic data import",description:"The data attribute accepts a function as well:",source:"@site/docs/examples/import-function.md",slug:"/examples/import-function",permalink:"/docs/examples/import-function",editUrl:"https://github.com/grid-js/website/edit/master/docs/examples/import-function.md",version:"current",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1593637169,sidebar:"sidebar",previous:{title:"Import server-side data",permalink:"/docs/examples/server"},next:{title:"Async data import",permalink:"/docs/examples/import-async"}},c=[],d={rightToc:c};function m(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," attribute accepts a function as well:"),Object(i.b)(o.a,{children:"\nconst grid = new Grid({\n  columns: ['Name', 'Email', 'Phone Number'],\n  data: () => [\n    ['John', 'john@example.com', '(353) 01 222 3333'],\n    ['Mark', 'mark@gmail.com',   '(01) 22 888 4444']\n  ]\n});\n",mdxType:"LiveExample"}))}m.isMDXComponent=!0}}]);