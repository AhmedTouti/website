(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{103:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return c})),t.d(r,"metadata",(function(){return d})),t.d(r,"rightToc",(function(){return p})),t.d(r,"default",(function(){return m}));var n=t(2),a=t(6),o=t(0),s=t(173),i=t(175),l=t(174),c={id:"xml",title:"Import XML",keywords:["javascript","table","javascript table","gridjs","grid js","import","import data","import xml","xml"]},d={id:"examples/xml",isDocsHomePage:!1,title:"Import XML",description:"Using the handler callback you can parse and handle HTTP calls yourself. The dafault handler tries to cast the response",source:"@site/docs/examples/xml.md",permalink:"/docs/examples/xml",editUrl:"https://github.com/grid-js/website/edit/master/docs/examples/xml.md",lastUpdatedBy:"Afshin Mehrabani",lastUpdatedAt:1592339556,sidebar:"sidebar",previous:{title:"From HTML Table",permalink:"/docs/examples/from"},next:{title:"Import server-side data",permalink:"/docs/examples/server"}},p=[],u={rightToc:p};function m(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},u,t,{components:r,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Using the ",Object(s.b)("inlineCode",{parentName:"p"},"handler")," callback you can parse and handle HTTP calls yourself. The dafault handler tries to cast the response\nto a JSON format but you can override it to parse the data in a different format."),Object(s.b)("p",null,"In this example, we are parsing ",Object(s.b)("inlineCode",{parentName:"p"},"https://gridjs.io/sitemap.xml")," which is a XML formatted document:"),Object(s.b)(l.a,{children:"\nconst grid = new Grid({\n  sort: true,\n  search: true,\n  pagination: true,\n  columns: ['Location', 'Change Frequency', 'Priority'],\n  server: {\n    url: 'https://gridjs.io/sitemap.xml',\n    handle: (res) => {\n      return res.text().then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"));\n    },\n    then: data => {\n      return Array.from(data.querySelectorAll('url'))\n        .map(row => [\n          row.querySelector('loc').innerHTML,\n          row.querySelector('changefreq').innerHTML,\n          row.querySelector('priority').innerHTML,\n        ]);\n    }\n  }\n});\n",transformCode:function(e){return"\nfunction () {\n  "+e+"\n \n  const wrapperRef = useRef(null);\n   \n  useEffect(() => {\n    grid.render(wrapperRef.current);\n  });\n  \n  return (\n    <div ref={wrapperRef} />\n  );\n}\n"},live:!0,scope:{Grid:i.b,CodeBlock:l.a,useEffect:o.useEffect,useRef:o.useRef},mdxType:"CodeBlock"}),Object(s.b)("br",null))}m.isMDXComponent=!0}}]);